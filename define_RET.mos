///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  AMOS|MOSHELL script to create RET Unit on Ericsson BaseBand Nodes
//  script was written to Standarize RET implementation, verify and minimize user inputs and errors
//  Script Name: define_RET.mos
//  Update date: 21.05.2021
//
//  make sure netconf files are in the correct PATH
//  Written by Mervan AbuGhosh MervanA@git
//
//=======================================================================================
//SYNTAX:
//  run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos SITESECTOR,RADIO,DIR,CONFIGID
//  run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos --cascaded
//  or
//  run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos --help
//  run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos --lookup ANTENNAID
//
//Input:
//  Input must be 4 fields seperated by ","
//  SITESECTOR,RADIO,DIR,CONFIGID
//
//    1)SITESECTOR      :is 6 characters, 5 is siteId and last is Sector indicator
//    2)RADIO           :is the Radio unit's ID with rfport=R used to power the RET, if ID provided is not configured on site script will fail.
//    3)AZIMUTH/DIR     :can not be more than 3 characters and value d can be used to set default value of "XXX"
//    4)CONFIGID        :supported CONFIGID and ANTENNA models are as below >
//      #######################
//      CONFIGID    ANTENNA-MODEL    VENDOR      xPOL
//      1X          ARETU/ARETUV01   KATHREIN    1x
//      2A          2LPX0412R        BROADRADIO  2x
//      2A          ODDI-032R20J-G   Comba-ODI   2x
//      2B          ADU4517R3        HUAWEI      2x
//      2C          AMB4520R0        HUAWEI      2x
//      2D          AMB4520R8v06     HUAWEI      2x
//      3A          ATR4518R4        HUAWEI      3x
//      3B          UL2PX506R-C      BROADRADIO  3x
//      3B          ULLPX206R-C      BROADRADIO  3x
//      3B          ULLPX506R-C      BROADRADIO  3x
//      3C          80010727         KATHREIN    3x
//      4A          ODI-15E18KJJ-G   Comba-ODI   4x
//      4A          15E18K18J18J     Comba-ODI   4x
//      4B          AE-7647-0001     ASELSAN     4x
//      4B          ODI065R15M18JJJ  Comba-ODI   4x
//      4C          UL2PX206.12R-E2  BROADRADIO  4x
//      4D          TONGYU           TONGYU      4x
//      4E          ODI-65R12M15JJJ  Comba-ODI   4x
//      6A          65R15M18JKDKD2   Comba-ODI   6x
//      6B          MS-12H180        MatSing     6x
//      8B          AOC4518R13v06    HUAWEI      8x
//      8C          AMB4519R18v06    HUAWEI      8x
//      8D          065R15M18JKD     Comba-ODI   8x
//
//=======================================================================================
//
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
l+mmo /dev/null
uv sort_proxy=1
confbdl+
$logpath := /mnt/e/Job/RET/Ericsson-RET/logs
$templates := /mnt/e/Job/RET/Ericsson-RET/templates
$netconfs := /mnt/e/Job/RET/Ericsson-RET/netconfs
####################################
## value COMMAND INPUT
####################################
$all_input := $1
$all_pattern = ^[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9],S.+,.+,..$
if $all_input ~ $all_pattern
  $split_separator = ,
  $input = split($all_input)
  unset $split_separator
else if $all_input ~ --help
  //getline used to bring echo $0 output as input which is the command/script used to run this file
  $mos = `$gawk 'BEGIN{("echo $0") | getline; print $2; close("echo $0")}'`
  //printout between lines 10 and 52 of the file $mos and delete leading backslashes
  ! $gawk '(FNR>=10 && FNR<=52){gsub(/^\/+/,"");print}' $mos
  unset small
  l-
  return
else if $all_input ~ --lookup
  $input = split($all_input)
  $lookup = $2
  ! echo ""
  ! echo "======================================================================================="
  ! $gawk 'NR==1; /$lookup/{print}' $templates/configTable.txt
  ! echo "======================================================================================="
  unset small
  l-
  return
else if $all_input ~ ^$ || $all_input !~ $all_pattern || $all_input !~ --lookup || $all_input !~ --help
  ! echo ""
  ! echo "======================================================================================="
  ! echo ""
  ! echo "Invalid Syntax!!"
  ! echo ""
  ! echo "Valid Syntax:"
  ! echo "run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos SITE1,S1C1,D,1X"
  ! echo "run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos --lookup 065R15M18JKD"
  ! echo "run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos --help"
  ! echo "======================================================================================="
  unset small
  l-
  return
else
  ! $gawk -v NN="$nodename" 'BEGIN{printf "\n%s\t%s\n%s\t%s\n%s\n\n", "SITE:", NN, "INPUT:", "$all_input", strftime("%F_%T")}' | tee -a $logpath/$nodename_RETinput.log
fi


####################################
## verify SITESECTOR
####################################
$SITESECTOR = $input[1]
$SITESECTORlen = `$gawk -v SS="$SITESECTOR" 'BEGIN{print length(SS)}'`
if $SITESECTORlen != 6
  ! echo ""
  ! echo "======================================================================================="
  ! echo ""
  ! echo "Invalid SITE SECTOR ID, must be 6 characters!"
  ! echo ""
  ! echo "======================================================================================="
  unset small
  l-
  return
else
  $SITESECTOR = $input[1]
fi


####################################
## verify RADIO
####################################
mr sectorunit
ma sectorunit FieldReplaceableUnit=[^1|SUP|BB].+$
for $mo in sectorunit
  $UNITRDN = rdn($mo)
  $UNIT = `$gawk -v UN="$UNITRDN" 'BEGIN{print gensub(/.*-/,"",1,UN)}'`
  if $UNIT = $input[2]
    $check = 1
    break
  fi
done
if $check != 1
  ! echo ""
  ! echo "======================================================================================="
  ! echo ""
  ! echo "Radio Unit does not exist"
  ! echo ""
  ! echo "======================================================================================="
  unset small
  l-
  return
fi
mr sectorunit
unset $check


####################################
## verify DIR
####################################
$DIRlen = `$gawk -v DR="$input[3]" 'BEGIN{print length(DR)}'`
if $DIRlen > 3 || $input[3] ~ ^$
  ! echo ""
  ! echo "======================================================================================="
  ! echo ""
  ! echo "Are you sure antenna is not looking at the moon ?"
  ! echo "use d or D as input if value is unknown"
  ! echo ""
  ! echo "======================================================================================="
  unset small
  l-
  return
fi
if $input[3] ~ [x|X|d|D]
  $DIR = XXX
else
  $DIR = `$gawk -v DR="$input[3]" 'BEGIN{if (length(DR)==1) print "00"DR; else if (length(DR)==2) print "0"DR; else if (DR<0 || DR>360) print "XXX"; else print DR}'`
fi


####################################
## SUPPORTING FUNCTIONS
####################################
func singelSerial_FUNC
  for 10
    ! echo "AERTUV01    example 123456-XX"
    ! echo "ARETU       example 123456"
    ! echo "RET Id      example RET6, RET7"
    ! echo ""
    $serialx = readinput(please provide ARETU Serial Number:  )
    $retIdx = readinput(please provide the RET Id:  )
    if $serialx !~ ^$ && $retIdx ~ ^RET[1-8][0-6]?$
       break
    fi
  done
endfunc

###
func dualSerial_FUNC
  for 10
    ! echo "RET1 serial example 123456y"
    ! echo "RET4 serial example 12345yy"
    ! echo ""
    $serial1 = readinput(please provide RET1 Serial Number:  )
    $serial2 = readinput(please provide RET4 Serial Number:  )
    if $serial !~ ^$
       break
    fi
  done
endfunc

###
func ABB4_1A_FUNC
  if $noOfTx = 4 || $noOfRf = 4
    cr Equipment=1,AntennaUnitGroup=$UNIT,AntennaUnit=1,AntennaSubunit=1,AuPort=1
    cr Equipment=1,AntennaUnitGroup=$UNIT,AntennaUnit=1,AntennaSubunit=1,AuPort=2
    cr Equipment=1,AntennaUnitGroup=$UNIT,AntennaUnit=1,AntennaSubunit=1,AuPort=3
    cr Equipment=1,AntennaUnitGroup=$UNIT,AntennaUnit=1,AntennaSubunit=1,AuPort=4
    set Equipment=1,AntennaUnitGroup=$UNIT,RfBranch=1 auPortRef Equipment=1,AntennaUnitGroup=$UNIT,AntennaUnit=1,AntennaSubunit=1,AuPort=1
    set Equipment=1,AntennaUnitGroup=$UNIT,RfBranch=2 auPortRef Equipment=1,AntennaUnitGroup=$UNIT,AntennaUnit=1,AntennaSubunit=1,AuPort=2
    set Equipment=1,AntennaUnitGroup=$UNIT,RfBranch=3 auPortRef Equipment=1,AntennaUnitGroup=$UNIT,AntennaUnit=1,AntennaSubunit=1,AuPort=3
    set Equipment=1,AntennaUnitGroup=$UNIT,RfBranch=4 auPortRef Equipment=1,AntennaUnitGroup=$UNIT,AntennaUnit=1,AntennaSubunit=1,AuPort=4
  fi
endfunc


####################################
## verify CONFIGID
####################################
if $input[4] ~ (2A|2A|2B|2D|3A|3B|3B|3B|3C|4A|4A|4B|4B|4C|4D|4E|6A|6B|8B|8C|8D)
  $check = 1
  $xmlFile = $input[4]_netconf.xml
else if $input[4] ~ (1X)
  $check = 1
  $xmlFile = 1X_netconf.xml
  singelSerial_FUNC
else if $input[4] ~ (2C)
  $check = 1
  $xmlFile = 2C_netconf.xml
  dualSerial_FUNC
fi
if $check != 1
  ! echo ""
  ! echo "======================================================================================="
  ! echo "UNKNOWN ConfigId !"
  ! echo ""
  ! echo "Valid Selections"
  ! echo "  CONFIGID    ANTENNA-MODEL    VENDOR      xPOL"
  ! echo "  1X          ARETU/ARETUV01   KATHREIN    1x"
  ! echo "  2A          2LPX0412R        BROADRADIO  2x"
  ! echo "  2A          ODDI-032R20J-G   Comba-ODI   2x"
  ! echo "  2B          ADU4517R3        HUAWEI      2x"
  ! echo "  2C          AMB4520R0        HUAWEI      2x"
  ! echo "  2D          AMB4520R8v06     HUAWEI      2x"
  ! echo "  3A          ATR4518R4        HUAWEI      3x"
  ! echo "  3B          UL2PX506R-C      BROADRADIO  3x"
  ! echo "  3B          ULLPX206R-C      BROADRADIO  3x"
  ! echo "  3B          ULLPX506R-C      BROADRADIO  3x"
  ! echo "  3C          80010727         KATHREIN    3x"
  ! echo "  4A          ODI-15E18KJJ-G   Comba-ODI   4x"
  ! echo "  4A          15E18K18J18J     Comba-ODI   4x"
  ! echo "  4B          AE-7647-0001     ASELSAN     4x"
  ! echo "  4B          ODI065R15M18JJJ  Comba-ODI   4x"
  ! echo "  4C          UL2PX206.12R-E2  BROADRADIO  4x"
  ! echo "  4D          TONGYU           TONGYU      4x"
  ! echo "  4E          ODI-65R12M15JJJ  Comba-ODI   4x"
  ! echo "  6A          65R15M18JKDKD2   Comba-ODI   6x"
  ! echo "  6B          MS-12H180        MatSing     6x"
  ! echo "  8B          AOC4518R13v06    HUAWEI      8x"
  ! echo "  8C          AMB4519R18v06    HUAWEI      8x"
  ! echo "  8D          065R15M18JKD     Comba-ODI   8x"
  ! echo ""
  ! echo "run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos --lookup 065R15M18JKD"
  ! echo ""
  ! echo "======================================================================================="
  unset small
  l-
  return
fi
unset $check


####################################
## PREP
####################################
if $input[4] ~ (2A|2A|2B|2D|3A|3B|3B|3B|3C|4A|4A|4B|4B|4C|4D|4E|6A|6B|8B|8C|8D)
  !sed 's/{SITESECTOR}/$SITESECTOR/g' $templates/$xmlFile > $netconfs/$nodename_$SITESECTOR.xml
  !sed -i 's/{RADIO}/$UNIT/g' $netconfs/$nodename_$SITESECTOR.xml
  !sed -i 's/{DIR}/$DIR/g' $netconfs/$nodename_$SITESECTOR.xml
else if $input[4] ~ (1X)
  !sed 's/{SITESECTOR}/$SITESECTOR/g' $templates/$xmlFile > $netconfs/$nodename_$SITESECTOR.xml
  !sed -i 's/{RADIO}/$UNIT/g' $netconfs/$nodename_$SITESECTOR.xml
  !sed -i 's/{DIR}/$DIR/g' $netconfs/$nodename_$SITESECTOR.xml
  !sed -i 's/{SERIALX}/$serialx/g' $netconfs/$nodename_$SITESECTOR.xml
  !sed -i 's/{RETID}/$retIdx/g' $netconfs/$nodename_$SITESECTOR.xml
else if $input[4] ~ (2C)
  !sed 's/{SITESECTOR}/$SITESECTOR/g' $templates/$xmlFile > $netconfs/$nodename_$SITESECTOR.xml
  !sed -i 's/{RADIO}/$UNIT/g' $netconfs/$nodename_$SITESECTOR.xml
  !sed -i 's/{DIR}/$DIR/g' $netconfs/$nodename_$SITESECTOR.xml
  !sed -i 's/{SERIAL1}/$serial1/g' $netconfs/$nodename_$SITESECTOR.xml
  !sed -i 's/{SERIAL2}/$serial2/g' $netconfs/$nodename_$SITESECTOR.xml
fi

### from ABB4_2A to ABB4_1A
if $UNIT ~ [2|4]$
  get SectorCarrier=$UNIT noOfTxAntennas > $noOfTx
  prs $UNITRDN,RfPort=[^R]
  $noOfRf = $nr_of_mos
  ABB4_1A_FUNC
fi

### AntennaUnit [2,3,4] are the 2nd 3rd and 4th cascaded physical antennas
set AntennaUnitGroup=$UNIT,AntennaUnit=1,AntennaSubunit=[^1B] retSubunitRef
set AntennaUnitGroup=$UNIT,AntennaUnit=2,AntennaSubunit=[^1B] retSubunitRef
set AntennaUnitGroup=$UNIT,AntennaUnit=3,AntennaSubunit=[^1B] retSubunitRef
set AntennaUnitGroup=$UNIT,AntennaUnit=4,AntennaSubunit=[^1B] retSubunitRef
del AntennaUnitGroup=$UNIT,AntennaUnit=1,AntennaSubunit=[^1B]
del AntennaUnitGroup=$UNIT,AntennaUnit=2,AntennaSubunit=[^1B]
del AntennaUnitGroup=$UNIT,AntennaUnit=3,AntennaSubunit=[^1B]
del AntennaUnitGroup=$UNIT,AntennaUnit=4,AntennaSubunit=[^1B]


####################################
## RUN
####################################
confbdl-
l-
//l+s $logpath/$nodename_RETinput.log
netconf $netconfs/$nodename_$SITESECTOR.xml
//###
//lt AuPort|RetSubUnit|AntennaNearUnit|AntennaSubunit|AntennaUnitGroup
//hgetm AntennaNearUnit|RetSubUnit iuantAntennaModelNumber|connectionState|operationalState|userLabel|uniqueId|Tilt
//l-
unset all
