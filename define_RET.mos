///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  AMOS|MOSHELL script to create RET Unit on Ericsson BaseBand Nodes
//  script was written to Standarize RET implementation, verify and minimize user inputs and errors
//  Script Name: define_RET.mos
//  Update date: 21.05.2021
//
//  make sure netconf files are in the correct PATH
//  Written by Mervan AbuGhosh MervanA@git
//
//=======================================================================================
//SYNTAX:
//  run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos SITESECTOR,RADIO,DIR,CONFIGID
//  or
//  run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos --help
//  run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos --lookup ANTENNAID
//
//Input:
//  Input must be 4 fields seperated by ","
//  SITESECTOR,RADIO,DIR,CONFIGID
//
//    1)SITESECTOR      :is 6 characters, 5 is siteId and last is Sector indicator
//    2)RADIO           :is the Radio unit's ID with Rfport=R used to power the RET, if ID provided is not configured on site script will fail.
//    3)AZIMUTH/DIR     :can not be more than 3 characters and value d can be used to set default value of "XXX"
//    4)CONFIGID        :supported CONFIGID and ANTENNA models are as below >
//      #######################
//      CONFIGID    ANTENNA-MODEL    VENDOR      xPOL
//      1X          ARETU/ARETUV01   KATHREIN    1x
//      2A          2LPX0412R        BROADRADIO  2x
//      2A          ODDI-032R20J-G   Comba-ODI   2x
//      2B          ADU4517R3        HUAWEI      2x
//      2C          AMB4520R0        HUAWEI      2x
//      2D          AMB4520R8v06     HUAWEI      2x
//      3A          ATR4518R4        HUAWEI      3x
//      3B          UL2PX506R-C      BROADRADIO  3x
//      3B          ULLPX206R-C      BROADRADIO  3x
//      3B          ULLPX506R-C      BROADRADIO  3x
//      3C          80010727         KATHREIN    3x
//      4A          ODI-15E18KJJ-G   Comba-ODI   4x
//      4A          15E18K18J18J     Comba-ODI   4x
//      4B          AE-7647-0001     ASELSAN     4x
//      4B          ODI065R15M18JJJ  Comba-ODI   4x
//      4C          UL2PX206.12R-E2  BROADRADIO  4x
//      4D          TONGYU           TONGYU      4x
//      4E          ODI-65R12M15JJJ  Comba-ODI   4x
//      6A          65R15M18JKDKD2   Comba-ODI   6x
//      6B          MS-12H180        MatSing     6x
//      8B          AOC4518R13v06    HUAWEI      8x
//      8C          AMB4519R18v06    HUAWEI      8x
//      8D          065R15M18JKD     Comba-ODI   8x
//
//=======================================================================================
//
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
l+mmos /dev/null
uv sort_proxy=1
confbdl+
$logpath := /mnt/e/Job/RET/Ericsson-RET/logs
$templates := /mnt/e/Job/RET/Ericsson-RET/templates
$netconfs := /mnt/e/Job/RET/Ericsson-RET/netconfs


####################################
## value COMMAND INPUT
####################################
$all_input := $1
$all_pattern = ^[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9],S.+,.+,..$
if $all_input ~ $all_pattern
  $split_separator = ,
  $input = split($all_input)
  unset $split_separator
else if $all_input ~ --help
  //getline used to bring echo $0 output as input which is the command/script used to run this file
  $mos = `$gawk 'BEGIN{("echo $0") | getline; print $2; close("echo $0")}'`
  //printout between lines 10 and 51 of the file $mos and delete leading backslashes
  ! $gawk '(FNR>=10 && FNR<=51){gsub(/^\/+/,"");print}' $mos
  unset small
  l-
  return
else if $all_input ~ --lookup
  $input = split($all_input)
  $lookup = $2
  ! echo ""
  ! echo "======================================================================================="
  ! $gawk 'NR==1{print}; /$lookup/{print}' $templates/configTable.txt
  ! echo "======================================================================================="
  unset small
  l-
  return
else if $all_input ~ ^$ || $all_input !~ $all_pattern || $all_input !~ --lookup || $all_input !~ --help
  ! echo ""
  ! echo "======================================================================================="
  ! echo ""
  ! echo "Invalid Syntax!!"
  ! echo ""
  ! echo "Valid Syntax:"
  ! echo "run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos SITEX1,S1C1,D,4A"
  ! echo "run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos --lookup 065R15M18JKD"
  ! echo "run /mnt/e/Job/RET/Ericsson-RET/define_RET.mos --help"
  ! echo "======================================================================================="
  unset small
  l-
  return
else
  ! $gawk -v NN="$nodename" 'BEGIN{printf "\n%s\t%s\n%s\t%s\n%s\n\n", "SITE:", NN, "INPUT:", "$all_input", strftime("%F_%T")}' | tee -a $logpath/$nodename_RETinput.log
fi


####################################
## load FUNCTIONS
####################################
run $templates/functions_RET.mos


####################################
## Sequence FUNCTIONS
####################################
SITESECTOR_FUNC
UNIT_FUNC
DIR_FUNC
CONFIGID_FUNC
ANTENNA_FUNC

####################################
## PREP
####################################
TEMPLATE_FUNC


####################################
## RUN
####################################
$testfile = testfile($netconfs/$nodename_$SITESECTOR.xml)
if $nr_of_lines != 0
  confbdl-
  l-
  ##
  l+s $logpath/$nodename_RETinput.log
  netconf $netconfs/$nodename_$SITESECTOR.xml
  ###
  lt AuPort|RetSubUnit|AntennaNearUnit|AntennaSubunit|AntennaUnitGroup
  hgetm AntennaNearUnit|RetSubUnit iuantAntennaModelNumber|connectionState|operationalState|userLabel|uniqueId|Tilt
  l-
else if $nr_of_lines = 0
  ! echo ""
  ! echo "======================================================================================="
  ! echo ""
  ! echo " nothing configured !!! "
  ! echo ""
  ! echo "======================================================================================="
  l-
fi
unset all
